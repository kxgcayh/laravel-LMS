var child,util=require("util"),fs=require("fs"),path=require("path"),spawn=require("child_process").spawn,minimatch=require("minimatch"),ignoreExtensions=[".dirtydb",".db",".styl",".css"],ignoreFiles=["node_modules"],node="node",args=process.argv,signal=null;function run(){var e=args.slice(2)||[];(child=spawn(node,e)).stdout.on("data",(function(e){process.stdout.write(e)})),child.stderr.on("data",(function(e){process.stdout.write(e)})),process.stdin.pipe(child.stdin),console.log("\nStarting: "+e.join(" "))}function restart(){child?signal?child.kill(signal):(child.kill(),run()):run()}function parseFolder(e){var n=[];return fs.readdirSync(e).forEach((function(i){var o=path.join(e,i),s=fs.lstatSync(o);if(void 0!==s)if(s.isDirectory()){for(var r,t=0;r=ignoreFiles[t];t++)if(minimatch(i,r))return void console.log("Found & ignored","./"+o,"; is listed in .gitignore");n=n.concat(parseFolder(o))}else n.push(o)})),n}function watchFiles(e,n){var i={persistent:!0,interval:25};e.forEach((function(e){if(0!==e.indexOf(".")){var o=path.extname(e);if(-1===ignoreExtensions.indexOf(o)){for(var s,r=0;s=ignoreFiles[r];r++)if(minimatch(e,s))return void console.log("Found & ignored","./"+e,"; is listed in .gitignore");fs.watchFile(e,i,(function(i,o){i.mtime+""!=o.mtime+""&&(console.log("./"+e+" changed"),n&&n())}))}else console.log("Found & ignored","./"+e,"; has ignored extension")}}))}args.length<=2&&(console.log("Found "+(args.length-2),"argument(s). Expected one or more."),console.log("Usage: \n  runjs [SIGNAL] somecode.js [--args]\nEx:  \n  runjs somecode.js --args     \n  runjs SIGUSR2 somecode.js --args\n"),process.exit(1)),args[2].match(/^SIG/)&&(signal=args.splice(2,1)[0]),args[2].match(/\.coffee$/)&&(node="coffee"),fs.existsSync(".gitignore")&&(ignoreFiles=ignoreFiles.concat(fs.readFileSync(".gitignore","utf8").split("\n").filter((function(e){return 0!==(e=e.trim()).indexOf("#")&&e.length>0})))),console.log("Watching",path.resolve("./"),"and all sub-directories not","excluded by your .gitignore. Will not monitor dotfiles."),watchFiles(parseFolder("."),restart),run(),process.stdin.setEncoding("utf8");
